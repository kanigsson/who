let identical ['a] (x y : 'a array) =
  len x = len y /\
    forall (k : int).
      0 <= k -> k < len x -> get k x = get k y

let copy ['a| r1 r2|] (ar : ref(r1,'a array)) = 
  {}
  let l = len !ar in
  if l == 0 then ref(r2) ar_empty
  else
    let r = ref(r2) (create l (get 0 !ar)) in
    (for i = 0 to l - 1 do
      { len !!r = l /\
        forall k.  0 <= k /\ k < i -> get k !!r = get k !!ar }
      r := set i (get i !ar) !r
    done );
    r
  { r: identical !!ar !!r}

(*
let copy a =
  let l = length a in
  if l = 0 then [||] else begin
    let res = create l (unsafe_get a 0) in
    for i = 1 to pred l do
      unsafe_set res i (unsafe_get a i)
    done;
    res
  end

*)
