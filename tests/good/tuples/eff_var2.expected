type region['u||]
type refty['reg 'ty||]
logic ref_get ['reg 'u||] : region[reg] -> refty[reg,u] -> u
logic get_2_1_tuple ['a 'b||] : (a * b) -> a
logic get_2_2_tuple ['a 'b||] : (a * b) -> b
logic mk_2tuple ['a 'b||] : a -> b -> a * b
logic = ['a||] : a -> a -> prop
logic ->  : prop -> prop -> prop
logic z  : int
logic f ['a 'e||] : (region[a] * e) -> int
INTROS ['c 'b||]
goal g:
  forall (x:refty[b,int]).
  forall (k:refty[c,int]).
  forall (u:region[c] * region[b]).
  (z =
   (f [b,region[c]||]
    (mk_2tuple [region[b],region[c]||]
     (get_2_2_tuple [region[c],region[b]||] u)
     (get_2_1_tuple [region[c],region[b]||] u))))
  ->
  ((ref_get [b,int||] (get_2_2_tuple [region[c],region[b]||] u) x) =
   (ref_get [c,int||] (get_2_1_tuple [region[c],region[b]||] u) k))
