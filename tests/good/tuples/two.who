type region ['u]
type refty ['reg 'ty]
logic ref_get ['reg 'u] : 'reg region -> ('reg,'u) refty -> 'u

logic get_2_1_tuple ['a 'b] : 'a * 'b -> 'a
logic get_2_2_tuple ['a 'b] : 'a * 'b -> 'b


logic = ['a] : 'a -> 'a -> prop
logic -> : prop -> prop -> prop
logic !! ['a|r|'e] : ref(r,'a) -> <r 'e > -> 'a

logic y : int
logic z : int
letregion r1 r2
goal g :
  forall (x : ref(r1,int)) (k : ref(r2,int)) (u : <r1 r2>).
    z = y -> !!x@u = !!k@u
