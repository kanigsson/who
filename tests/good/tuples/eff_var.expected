type region['u||]
type refty['reg 'ty||]
logic ref_get ['reg1 'u1||] : region[reg1||] -> refty[reg1,u1||] -> u1
logic get_2_1_tuple ['a 'b||] : (a * b) -> a
logic get_2_2_tuple ['a1 'b1||] : (a1 * b1) -> b1
logic = ['a2||] : a2 -> a2 -> prop
logic ->  : prop -> prop -> prop
logic !! ['a3 'r 'e||] : refty[r,a3||] -> (region[r||] * e) -> a3
logic z  : int
logic f ['e1||] : e1 -> int
INTROS ['r1 'r2||]
goal g : forall (x:refty[r2,int||]).
         forall (k:refty[r1,int||]).
         forall (u2:region[r1||] * region[r2||]).
         (z =[int||] (f [region[r1||] * region[r2||]||] u2)) ->
         ((ref_get [r2,int||]
           (get_2_2_tuple [region[r1||],region[r2||]||] u2) x)
          =[int||]
          (ref_get [r1,int||]
           (get_2_1_tuple [region[r1||],region[r2||]||] u2) k))
