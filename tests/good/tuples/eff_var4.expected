type unit
logic tt  : unit
type region['u||]
type refty['reg 'ty||]
logic ref_get ['reg1 'u1||] : region[reg1||] -> refty[reg1,u1||] -> u1
logic get_2_1_tuple ['a 'b||] : (a * b) -> a
logic get_2_2_tuple ['a1 'b1||] : (a1 * b1) -> b1
logic mk_2tuple ['a2 'b2||] : a2 -> b2 -> a2 * b2
logic = ['a3||] : a3 -> a3 -> prop
logic ->  : prop -> prop -> prop
logic !! ['a4 'r 'e||] : refty[r,a4||] -> (region[r||] * e) -> a4
logic z  : int
INTROS ['b3||]
logic f ['e1||] : (region[b3||] * e1) -> int
goal g : forall (x:refty[b3,int||]).
         forall (u2:region[b3||]).
         (z =[int||] (f [unit||] (mk_2tuple [region[b3||],unit||] u2 tt))) ->
         ((ref_get [b3,int||] u2 x) =[int||] 3)
