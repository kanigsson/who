type unit
logic = ['a||] : a -> a -> prop
logic /\  : prop -> prop -> prop
logic !! ['a|r|'e] : ref(r,a) -> <r 'e> -> a
let
  ! ['a|r|] = (fun (x:ref(r,a)) -> {(fun (cur:<r >) -> True)}
              parameter(a,{  + r })
              {(fun (old:<r >) ->
               (fun (cur:<r >) ->
               (fun (r1:a) -> (!!x@cur = r1) /\ (!!x@old = !!x@cur))))}) 
let
  ref ['a|r|] = (fun (v:a) -> {(fun (cur:<r >) -> True)}
                parameter(ref(r,a),{  + r })
                {(fun (old:<r >) ->
                 (fun (cur:<r >) -> (fun (x:ref(r,a)) -> !!x@cur = v)))}) 
let
  main  = (fun (anon:unit) -> {(fun (cur:< >) -> True)}
          letregion rho in let x = ref [int| rho|] 5 in ! [int| rho|] x
          {(fun (old:< >) -> (fun (cur:< >) -> (fun (r:int) -> r = 5)))}) 
