logic = ['a||] : 'a -> 'a -> prop
logic /\ : prop -> prop -> prop
logic !! ['a|r|'e] : ref(r,'a) -> <r 'e > -> 'a
parameter ! ['a|r|] (x : ref(r,'a)) : 'a, {r} =
  {}
  {r : !!x = r /\ !!x|old = !!x}
let seq ['a 'b 'c||'e1 'e2] (f : 'a ->{'e1} 'b) (g : 'b ->{'e2} 'c) (x : 'a) =
{}
g (f x)
{}

let h [|r1 r2|] (x : ref(r1,int)) (y : ref(r2,int)) =
  {}
  seq [{r1}  {r2}] (fun (z : int) -> {} !x {}) (fun (z : int) -> {} !y {})
  {}
