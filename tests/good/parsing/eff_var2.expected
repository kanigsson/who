type region
type refty['u||]
logic ref_get ['u1||] : region -> refty[u1||] -> u1
logic get_2_1_tuple ['a 'b||] : (a * b) -> a
logic get_2_2_tuple ['a1 'b1||] : (a1 * b1) -> b1
logic = ['a2||] : a2 -> a2 -> prop
logic ->  : prop -> prop -> prop
logic !! ['a3|r|'e] : ref(r,a3) -> <r 'e> -> a3
logic z  : int
logic f [|r1|'e1] : ref(r1,int) -> <r1 'e1> -> int
letregion r2 r3
goal g : forall (x:ref(r3,int)).
         forall (k:ref(r2,int)).
         forall (u2:<r3 r2 >).
         (z =[int||] (f [| r3| {r2 }] x u2)) ->
         ((!! [int| r3| {r2 }] x u2) =[int||] (!! [int| r2| {r3 }] k u2))
