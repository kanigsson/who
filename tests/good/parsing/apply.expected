logic = ['a||] : a -> a -> prop
logic /\  : prop -> prop -> prop
logic !! ['a1|r|'e] : ref(r,a1) -> <{r  'e }> -> a1
let
  ! ['a2|r1|] = (fun (x:ref(r1,a2)) -> {(fun (cur:<{r1  }>) -> True)}
                parameter(a2,{r1  })
                {(fun (old:<{r1  }>) ->
                 (fun (cur1:<{r1  }>) ->
                 (fun (r2:a2) ->
                 ((x !![a2| r1| { }] cur1) =[a2||] r2) /\
                 ((x !![a2| r1| { }] old) =[a2||] (x !![a2| r1| { }] cur1)))))}) 
let apply ['a3
  'b||'e1] = (fun (f:a3 ->{{ 'e1 }} b) ->
             (fun (x1:a3) -> {(fun (cur2:<{ 'e1 }>) -> True)} f x1
             {(fun (old1:<{ 'e1 }>) ->
              (fun (cur3:<{ 'e1 }>) -> (fun (anon:b) -> True)))})) 
let
  h [|r3|] = (fun (x2:ref(r3,int)) -> {(fun (cur4:<{r3  }>) -> True)}
             apply [int,int|| {r3  }]
             (fun (z:int) -> {(fun (cur5:<{r3  }>) -> True)} ! [int| r3|] x2
             {(fun (old2:<{r3  }>) ->
              (fun (cur6:<{r3  }>) -> (fun (anon1:int) -> True)))})
             5
             {(fun (old3:<{r3  }>) ->
              (fun (cur7:<{r3  }>) -> (fun (anon2:int) -> True)))}) 
