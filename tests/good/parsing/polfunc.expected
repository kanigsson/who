logic fst ['a 'b||] : (a * b) -> a
logic snd ['a 'b||] : (a * b) -> b
let
  f [||'e] = (fun (g:int ->{  +  'e} int) ->
             {(fun (cur:< 'e>) ->
              fst [int -> < 'e> -> prop,int -> < 'e> -> < 'e> -> int ->
              prop||] g 5 cur)}
             g 5
             {(fun (old:< 'e>) ->
              (fun (cur:< 'e>) ->
              (fun (r:int) ->
              snd [int -> < 'e> -> prop,int -> < 'e> -> < 'e> -> int ->
              prop||] g 5 old cur r)))}) 
