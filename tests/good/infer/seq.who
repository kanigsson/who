logic = ['a||] : 'a -> 'a -> prop
logic /\ : prop -> prop -> prop
logic !! ['a|r|] : ref(r,'a) -> < r > -> 'a
parameter ! ['a|r|] (x : ref(r,'a)) : 'a, {r} =
{}
{r : !!x = r /\ !!x|old = !!x}

let seq ['a 'b 'c||'e1 'e2] (f : 'a ->{'e1} 'b) (g : 'b ->{'e2} 'c) (x : 'a) =
{} 
g (f x) 
{}

let h [|r1 r2|] (a : ref(r1,int)) (b : ref(r2,int)) =
  {}
  seq [{r1} {r2}] (fun (c : int) -> {} !a {}) (fun (d : int) -> {} !b {}) 
  {}
