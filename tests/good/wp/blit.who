let blit ['a31|r1
  r2|] = (fun (ar1:ref(r1,array['a31||])) ->
         (fun (ar2:ref(r2,array['a31||])) ->
         (fun (ofs1:int) ->
         (fun (ofs2:int) ->
         (fun (l2:int) ->
         {(fun (cur10:<r1 r2  >) ->
          ((((0 <= l2) /\ (0 <= ofs1)) /\ (0 <= ofs2)) /\
           (ofs1 <=
            ((len ['a31||] (!! [array['a31||]| r1| {r1 r2  }] ar1 cur10)) -
             l2)))
          /\
          (ofs2 <=
           ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur10)) - l2)))}
         let a32 = ! [array['a31||]| r1|] ar1 in
         let anf = ! [array['a31||]| r2|] ar2 in
         let l2 = len ['a31||] anf in
         if ofs1 << ofs2 then
         let __start = l2 - 1 in
         let __end = 0 in
         fordownto [|| {r1 r2  }]
         (fun (i6:int) ->
         (fun (cur11:<r1 r2  >) ->
         (((!! [array['a31||]| r1| {r1 r2  }] ar1 cur11) =[array['a31||]||]
           a32)
          /\
          ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur11))
           =[int||] l2))
         /\
         (forall (k:int).
          ((i6 < k) /\ (k <= (l2 - 1))) ->
          ((get ['a31||] (ofs2 + k)
            (!! [array['a31||]| r2| {r1 r2  }] ar2 cur11))
           =['a31||]
           (get ['a31||] (ofs1 + k)
            (!! [array['a31||]| r1| {r1 r2  }] ar1 cur11))))))
         __start __end
         (fun (i6:int) ->
         {(fun (cur11:<r1 r2  >) ->
          ((__end <= i6) /\ (i6 <= __start)) /\
          ((((!! [array['a31||]| r1| {r1 r2  }] ar1 cur11) =[array['a31||]||]
             a32)
            /\
            ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur11))
             =[int||] l2))
           /\
           (forall (k1:int).
            (i6 < k1) ->
            ((k1 <= (l2 - 1)) ->
             ((get ['a31||] (ofs2 + k1)
               (!! [array['a31||]| r2| {r1 r2  }] ar2 cur11))
              =['a31||]
              (get ['a31||] (ofs1 + k1)
               (!! [array['a31||]| r1| {r1 r2  }] ar1 cur11)))))))}
         let anf1 = ! [array['a31||]| r1|] ar1 in
         let anf2 = ! [array['a31||]| r2|] ar2 in
         ar2 :=[array['a31||]| r2|]
         (set ['a31||] (ofs2 + i6) (get ['a31||] (ofs1 + i6) anf1) anf2)
         {(fun (anon3:<r1 r2  >) ->
          (fun (cur11:<r1 r2  >) ->
          (fun (anon4:unit) ->
          (((!! [array['a31||]| r1| {r1 r2  }] ar1 cur11) =[array['a31||]||]
            a32)
           /\
           ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur11))
            =[int||] l2))
          /\
          (forall (k2:int).
           ((i6 - 1) < k2) ->
           ((k2 <= (l2 - 1)) ->
            ((get ['a31||] (ofs2 + k2)
              (!! [array['a31||]| r2| {r1 r2  }] ar2 cur11))
             =['a31||]
             (get ['a31||] (ofs1 + k2)
              (!! [array['a31||]| r1| {r1 r2  }] ar1 cur11))))))))}) else
         let __start1 = 0 in
         let __end1 = l2 - 1 in
         forto [|| {r1 r2  }]
         (fun (i7:int) ->
         (fun (cur12:<r1 r2  >) ->
         (((!! [array['a31||]| r1| {r1 r2  }] ar1 cur12) =[array['a31||]||]
           a32)
          /\
          ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur12))
           =[int||] l2))
         /\
         (forall (k3:int).
          ((0 <= k3) /\ (k3 < i7)) ->
          ((get ['a31||] (ofs2 + k3)
            (!! [array['a31||]| r2| {r1 r2  }] ar2 cur12))
           =['a31||]
           (get ['a31||] (ofs1 + k3)
            (!! [array['a31||]| r1| {r1 r2  }] ar1 cur12))))))
         __start1 __end1
         (fun (i7:int) ->
         {(fun (cur12:<r1 r2  >) ->
          ((__start1 <= i7) /\ (i7 <= __end1)) /\
          ((((!! [array['a31||]| r1| {r1 r2  }] ar1 cur12) =[array['a31||]||]
             a32)
            /\
            ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur12))
             =[int||] l2))
           /\
           (forall (k4:int).
            (0 <= k4) ->
            ((k4 < i7) ->
             ((get ['a31||] (ofs2 + k4)
               (!! [array['a31||]| r2| {r1 r2  }] ar2 cur12))
              =['a31||]
              (get ['a31||] (ofs1 + k4)
               (!! [array['a31||]| r1| {r1 r2  }] ar1 cur12)))))))}
         let anf3 = ! [array['a31||]| r1|] ar1 in
         let anf4 = ! [array['a31||]| r2|] ar2 in
         ar2 :=[array['a31||]| r2|]
         (set ['a31||] (ofs2 + i7) (get ['a31||] (ofs1 + i7) anf3) anf4)
         {(fun (anon5:<r1 r2  >) ->
          (fun (cur12:<r1 r2  >) ->
          (fun (anon6:unit) ->
          (((!! [array['a31||]| r1| {r1 r2  }] ar1 cur12) =[array['a31||]||]
            a32)
           /\
           ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur12))
            =[int||] l2))
          /\
          (forall (k5:int).
           (0 <= k5) ->
           ((k5 < (i7 + 1)) ->
            ((get ['a31||] (ofs2 + k5)
              (!! [array['a31||]| r2| {r1 r2  }] ar2 cur12))
             =['a31||]
             (get ['a31||] (ofs1 + k5)
              (!! [array['a31||]| r1| {r1 r2  }] ar1 cur12))))))))})
         {(fun (old5:<r1 r2  >) ->
          (fun (cur13:<r1 r2  >) ->
          (fun (anon7:unit) ->
          (((!! [array['a31||]| r1| {r1 r2  }] ar1 old5) =[array['a31||]||]
            (!! [array['a31||]| r1| {r1 r2  }] ar1 cur13))
           /\
           ((len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 cur13))
            =[int||]
            (len ['a31||] (!! [array['a31||]| r2| {r1 r2  }] ar2 old5))))
          /\
          (forall (k6:int).
           ((0 <= k6) /\ (k6 < l2)) ->
           ((get ['a31||] (ofs2 + k6)
             (!! [array['a31||]| r2| {r1 r2  }] ar2 cur13))
            =['a31||]
            (get ['a31||] (ofs1 + k6)
             (!! [array['a31||]| r1| {r1 r2  }] ar1 cur13)))))))}))))) 
