type hmap['a31
'b5||]
logic hmem ['a32 'b6||] : (a32) -> (hmap[(a32),(b6)||]) -> bool
logic hget ['a33 'b7||] : (a33) -> (hmap[(a33),(b7)||]) -> b7
logic hset ['a34 'b8||] : (a34) -> (b8) -> (hmap[(a34),(b8)||]) ->
  hmap[(a34),(b8)||]
let
  memo [|t4|] = (fun (table:ref(t4,hmap[int,int||])) ->
                (fun (f3:int -> int) ->
                (fun (x10:int) ->
                {(fun (cur10:<t4  >) -> True )}
                let anf2 = ! [hmap[int,int||]| t4|] table in
                if true then
                hget [int,int||] x10 anf2 else
                let
                anon3 =
                       table :=[hmap[int,int||]| t4|]
                       (hset [int,int||] x10 x10 anf2)
                in x10
                {(fun (old5:<t4  >) ->
                 (fun (cur11:<t4  >) -> (fun (r5:int) -> True)))})))
